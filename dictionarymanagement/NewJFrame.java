/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionarymanagement;


import com.darkprograms.speech.synthesiser.Synthesiser;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.advanced.AdvancedPlayer;


/**
 *
 * @author huyengocao
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public DefaultListModel defaultList = new DefaultListModel();
    public NewJFrame() {
        initComponents();
        DictionaryManagement dictionaryManagement = new DictionaryManagement();
        dictionaryManagement.insertFromFile();
        jTextArea1.setEditable(false);
        this.setResizable(false);
        addButton.setToolTipText("Thêm từ mới");
        HistoryButton.setToolTipText("Lịch sử tìm kiếm");
        DeleteButton.setToolTipText("Xóa từ");
        pronounce.setToolTipText("Phát âm");
        FindingTextField.setToolTipText("Nhập từ cần tra!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unc"
            + "DictionaryManagement dictionaryManagement = new DictionaryManagement();\n" +
"        dictionaryManagement.insertFromFile();\n" +
"        this.setResizable(false);hecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        FindingTextField = new javax.swing.JTextField();
        LookupBotton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        ShownAllButton = new javax.swing.JButton();
        pronounce = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        EditButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        DeleteButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        addButton = new javax.swing.JButton();
        HistoryButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        jButton1.setText("jButton1");

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eng - Viet Dictionary");
        setBackground(new java.awt.Color(204, 255, 255));
        setForeground(new java.awt.Color(102, 204, 255));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        FindingTextField.setText("Nhập từ bạn cần tra");
        FindingTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FindingTextFieldMouseClicked(evt);
            }
        });
        FindingTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindingTextFieldActionPerformed(evt);
            }
        });
        FindingTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FindingTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FindingTextFieldKeyTyped(evt);
            }
        });

        LookupBotton.setBackground(new java.awt.Color(255, 255, 255));
        LookupBotton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        LookupBotton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/search.png"))); // NOI18N
        LookupBotton.setText("Look up");
        LookupBotton.setToolTipText("Tìm kiếm");
        LookupBotton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LookupBottonMouseClicked(evt);
            }
        });
        LookupBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LookupBottonActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(153, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        ShownAllButton.setBackground(new java.awt.Color(255, 255, 255));
        ShownAllButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ShownAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/Showlist.jpg"))); // NOI18N
        ShownAllButton.setText("Show all words");
        ShownAllButton.setToolTipText("Xem danh sách các từ trong từ điển");
        ShownAllButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShownAllButtonMouseClicked(evt);
            }
        });

        pronounce.setBackground(new java.awt.Color(255, 255, 255));
        pronounce.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/pronounce.png"))); // NOI18N
        pronounce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pronounceMouseClicked(evt);
            }
        });
        pronounce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pronounceActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("English - Vietnamese Dictionary");

        EditButton.setBackground(new java.awt.Color(255, 255, 255));
        EditButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EditButton.setForeground(new java.awt.Color(51, 51, 255));
        EditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/newEdit.png"))); // NOI18N
        EditButton.setText("Edit");
        EditButton.setToolTipText("Chỉnh sửa");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        jList1.setBackground(new java.awt.Color(153, 255, 255));
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList1MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jList1MouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        DeleteButton.setBackground(new java.awt.Color(255, 255, 255));
        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/DeleteNew.png"))); // NOI18N
        DeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteButtonMouseClicked(evt);
            }
        });
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/add.png"))); // NOI18N
        addButton.setPreferredSize(new java.awt.Dimension(60, 41));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addButtonMouseReleased(evt);
            }
        });

        HistoryButton.setBackground(new java.awt.Color(255, 255, 255));
        HistoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/save.png"))); // NOI18N
        HistoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HistoryButtonMouseClicked(evt);
            }
        });

        homeButton.setBackground(new java.awt.Color(255, 255, 255));
        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon Từ điển/ohome.png"))); // NOI18N
        homeButton.setToolTipText("Quay về trang chủ");
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(FindingTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(ShownAllButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(EditButton, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pronounce, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LookupBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(HistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addComponent(jScrollPane1)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 353, Short.MAX_VALUE)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 251, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(homeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LookupBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FindingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(HistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ShownAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pronounce, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 224, Short.MAX_VALUE)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 223, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FindingTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FindingTextFieldMouseClicked
        FindingTextField.setText("");
        jTextArea1.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_FindingTextFieldMouseClicked

    private void FindingTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FindingTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_FindingTextFieldKeyTyped
    
    private void FindingTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindingTextFieldActionPerformed
        if (!FindingTextField.getText().equals(""))
        jTextArea1.setText("");
        String wordfind = FindingTextField.getText();
        for (int i = 0; i < Dictionary.arraysWord.size(); i++){
            Words word = Dictionary.arraysWord.get(i);
            if(word.getWordTarget().equals(wordfind)){
            jTextArea1.append("Từ vựng:\n" + word.getWordTarget() + "\nNghĩa : \n" + word.getWordExplain());
            return;
            }
        }
        jTextArea1.append("Not Found! please retype.");// TODO add your handling code here:
    }//GEN-LAST:event_FindingTextFieldActionPerformed

    private void LookupBottonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LookupBottonMouseClicked
                //String wordfind = FindingTextField.getText().trim();
            jTextArea1.setText("");
        for (int i = 0; i < Dictionary.arraysWord.size(); i++){
            Words word = Dictionary.arraysWord.get(i);
            if(word.getWordTarget().equals(FindingTextField.getText().trim())){
            jTextArea1.append("Từ vựng:\n" + word.getWordTarget() + "\nNghĩa : \n" + word.getWordExplain());
            if(!Dictionary.historyWord.contains(word)){
                    Dictionary.historyWord.add(word);
                }
                else {
                    for (int j =0; j < Dictionary.historyWord.size(); j++)
                    {
                        if(Dictionary.historyWord.get(j).getWordTarget().equals(word.getWordTarget()))
                            Dictionary.historyWord.remove(j);
                    }
                    Dictionary.historyWord.add(word);
                }            
            return;
            }
        }
        jTextArea1.append("Not Found! please retype.");// TODO add your handling code here:
    }//GEN-LAST:event_LookupBottonMouseClicked

    private void ShownAllButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShownAllButtonMouseClicked
        defaultList.clear();
        for (int i = 0; i < Dictionary.arraysWord.size(); i++)
        {
            defaultList.addElement(Dictionary.arraysWord.get(i).getWordTarget());
        }
        jList1.setModel(defaultList);
// TODO add your handling code here:
    }//GEN-LAST:event_ShownAllButtonMouseClicked

    private void LookupBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LookupBottonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LookupBottonActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
       for (Words word : Dictionary.arraysWord) {
            if (word.getWordTarget().equals(jList1.getSelectedValue())) {
                jTextArea1.setText("Từ vựng:\n" + word.getWordTarget() + "\nNghĩa : \n" + word.getWordExplain());
                if(!Dictionary.historyWord.contains(word)){
                    Dictionary.historyWord.add(word);
                }
                else {
                    for (int i =0; i < Dictionary.historyWord.size(); i++)
                    {
                        if(Dictionary.historyWord.get(i).getWordTarget().equals(word.getWordTarget()))
                            Dictionary.historyWord.remove(i);
                    }
                    Dictionary.historyWord.add(word);
                }
                break;
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_jList1MouseClicked

    private void DeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteButtonMouseClicked
        if (jList1.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Click vào từ muốn xóa!");
        } else {
            int check = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa từ này ?", "Delete Word", JOptionPane.YES_NO_OPTION);
            if (check == JOptionPane.YES_OPTION) {
                for (int i = 0; i < Dictionary.arraysWord.size(); i++) {
                    if (Dictionary.arraysWord.get(i).getWordTarget().equals(jList1.getSelectedValue())) {
                        Dictionary.arraysWord.remove(i);                        
                        defaultList.remove(jList1.getSelectedIndex());
                    }
                }
                for (int i = 0; i < Dictionary.historyWord.size(); i++) {
                    if (Dictionary.historyWord.get(i).getWordTarget().equals(jList1.getSelectedValue())) {
                        Dictionary.historyWord.remove(i);
                        
                        // System.out.println("Đã xóa!");
                        return;
                    }
                }
            } else {
                setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_DeleteButtonMouseClicked

    private void pronounceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pronounceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pronounceActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        new editFrame().setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_EditButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void pronounceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pronounceMouseClicked
        if (jList1.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Chọn một từ");
        } else {
            Synthesiser synthesiser = new Synthesiser();
            Thread thread = new Thread(() -> {
                try {
                    AdvancedPlayer player = new AdvancedPlayer(synthesiser.getMP3Data(jList1.getSelectedValue()));
                    player.play();
                } catch (IOException | JavaLayerException e) {
                    JOptionPane.showMessageDialog(rootPane, "Lỗi");
                }
            });

            thread.setDaemon(false);
            thread.start();
        }// TODO add your handling code here:
    }//GEN-LAST:event_pronounceMouseClicked

    private void FindingTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FindingTextFieldKeyReleased
        String sub_str = FindingTextField.getText();
        defaultList.clear();
        for (Words word : Dictionary.arraysWord) {
            if (word.getWordTarget().indexOf(sub_str) == 0) {
                defaultList.addElement(word.getWordTarget());

            }
        }
        jList1.setModel(defaultList);// TODO add your handling code here:
    }//GEN-LAST:event_FindingTextFieldKeyReleased

    private void jList1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseEntered
       // TODO add your handling code here:
    }//GEN-LAST:event_jList1MouseEntered

    private void jList1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1MouseReleased

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        new addFrame().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_addButtonMouseClicked

    private void addButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseReleased
        //this.setTitle("Add new word");// TODO add your handling code here:
    }//GEN-LAST:event_addButtonMouseReleased

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
      
    }//GEN-LAST:event_jList1MousePressed

    private void HistoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistoryButtonMouseClicked
        addButton.setVisible(false);
        LookupBotton.setVisible(false);
        ShownAllButton.setVisible(false);
        HistoryButton.setVisible(false);
        defaultList.clear();
        for (int i = Dictionary.historyWord.size()-1; i >= 0; i--)
        {
            defaultList.addElement(Dictionary.historyWord.get(i).getWordTarget());
        }
        jList1.setModel(defaultList);
        
// TODO add your handling code here:
    }//GEN-LAST:event_HistoryButtonMouseClicked

    private void homeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseClicked
        addButton.setVisible(true);
        LookupBotton.setVisible(true);
        ShownAllButton.setVisible(true);
        HistoryButton.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_homeButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
//         DictionaryManagement dm = new DictionaryManagement();
//         dm.dictionaryExportToFile();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
                
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JTextField FindingTextField;
    private javax.swing.JButton HistoryButton;
    private javax.swing.JButton LookupBotton;
    private javax.swing.JButton ShownAllButton;
    private javax.swing.JButton addButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton pronounce;
    // End of variables declaration//GEN-END:variables
}
